<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="       
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd       
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd       
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd       
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd       
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
      http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
	default-autowire="default">

	<context:component-scan base-package="org.ruanwei.demo">
		<context:include-filter type="annotation"
			expression="org.springframework.validation.annotation.Validated" />
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" 
			/> -->
	</context:component-scan>

	<context:property-placeholder location="classpath*:jdbc.properties" />

	<bean id="conversionService2"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="registerDefaultFormatters" value="true" />
		<property name="formatterRegistrars">
			<set>
				<bean class="org.ruanwei.demo.core.databind.MyUserFormatterRegistrar" />
			</set>
		</property>
	</bean>

	<!-- <bean class="org.springframework.validation.beanvalidation.BeanValidationPostProcessor" 
		p:validator-ref="validator" /> -->
	<bean
		class="org.ruanwei.demo.core.interceptor.BeanValidationBeanPostProcessor"
		p:validator-ref="validator" />

	<bean
		class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"
		p:order="0" p:validator-ref="validator" />

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- building message codes from validation error codes,used by DataBinder -->
	<bean id="messageCodesResolver"
		class="org.springframework.validation.DefaultMessageCodesResolver" />

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:exception</value>
				<value>classpath:param</value>
			</list>
		</property>
		<property name="cacheSeconds" value="10" />
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<bean id="myThreadPool"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" /><!--最小线程数  -->
		<property name="maxPoolSize" value="10" /><!--最大线程数  -->
		<property name="queueCapacity" value="50" /><!--缓冲队列大小  -->
		<property name="threadNamePrefix" value="org.ruanwei-" /><!--线程池中产生的线程名字前缀  -->
		<property name="keepAliveSeconds" value="30" /><!--线程池中空闲线程的存活时间单位秒  -->
	</bean>

	<import resource="integration-dataAccess.xml" />
	<!-- <import resource="integration-remoting.xml" /> -->
</beans>